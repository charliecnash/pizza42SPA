{"remainingRequest":"/Users/charlie/Documents/Pizza/Pizza42SAP/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/charlie/Documents/Pizza/Pizza42SAP/node_modules/auth0-js/src/helper/storage/handler.js","dependencies":[{"path":"/Users/charlie/Documents/Pizza/Pizza42SAP/node_modules/auth0-js/src/helper/storage/handler.js","mtime":1528403123000},{"path":"/Users/charlie/Documents/Pizza/Pizza42SAP/node_modules/cache-loader/dist/cjs.js","mtime":1531542006000},{"path":"/Users/charlie/Documents/Pizza/Pizza42SAP/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var windowHandler = require('../window');\nvar DummyStorage = require('./dummy');\nvar CookieStorage = require('./cookie');\nvar Warn = require('../warn');\n\nfunction StorageHandler() {\n  this.warn = new Warn({});\n  this.storage = new CookieStorage();\n  try {\n    // some browsers throw an error when trying to access localStorage\n    // when localStorage is disabled.\n    var localStorage = windowHandler.getWindow().localStorage;\n    if (localStorage) {\n      this.storage = localStorage;\n    }\n  } catch (e) {\n    this.warn.warning(e);\n    this.warn.warning(\"Can't use localStorage. Using CookieStorage instead.\");\n  }\n}\n\nStorageHandler.prototype.failover = function() {\n  if (this.storage instanceof DummyStorage) {\n    this.warn.warning('DummyStorage: ignore failover');\n    return;\n  } else if (this.storage instanceof CookieStorage) {\n    this.warn.warning('CookieStorage: failing over DummyStorage');\n    this.storage = new DummyStorage();\n  } else {\n    this.warn.warning('LocalStorage: failing over CookieStorage');\n    this.storage = new CookieStorage();\n  }\n};\n\nStorageHandler.prototype.getItem = function(key) {\n  try {\n    return this.storage.getItem(key);\n  } catch (e) {\n    this.warn.warning(e);\n    this.failover();\n    return this.getItem(key);\n  }\n};\n\nStorageHandler.prototype.removeItem = function(key) {\n  try {\n    return this.storage.removeItem(key);\n  } catch (e) {\n    this.warn.warning(e);\n    this.failover();\n    return this.removeItem(key);\n  }\n};\n\nStorageHandler.prototype.setItem = function(key, value, options) {\n  try {\n    return this.storage.setItem(key, value, options);\n  } catch (e) {\n    this.warn.warning(e);\n    this.failover();\n    return this.setItem(key, value, options);\n  }\n};\n\nmodule.exports = StorageHandler;\n",null]}